%display nonZeros
%display var x[*  
%display ignoreCons

%arg -solver cplex
%display solutionPool


parameters:
	n:=5;
	d[,]:= ( 	( 0, 1, 2, 3, 4),
		 		( 2, 0, 1, 2, 3),
		 		( 3, 1, 0, 1, 2),
		 		( 2, 3, 1, 0, 1),
		 		( 5, 3, 1, 1, 0) );

	routes := set ( [1,2] , [1,3], [1,5], [2,3] , [3,4] , [3,5] , [4,5]);
	t[routes] := (10,3,20,15,5,20,35);
		 		
variables:
	x[1..n,1..n]: binary;
	#dummy variables to store the products x_hj * x_ik 
	{ [h,i] in routes, j:=1(1)n, k:=1(1)n , k<>j: w[h,j,i,k]: real[0..1]; }

objectives:
	costs: sum{  [h,i] in routes,  j:=1(1)n, k:=1(1)n , k<>j: 	
			t[h,i]*d[j,k]*w[h,j,i,k] } ->min;
constraints:
	{ [h,i] in routes, j:=1(1)n, k:=1(1)n, k<>j: w[h,j,i,k]=x[h,j]*x[i,k];}	

	sos1 { h:=1(1)n: sum{ j:=1(1)n: x[h,j] } = 1; }
	sos2 { j:=1(1)n: sum{ h:=1(1)n: x[h,j] } = 1; } 