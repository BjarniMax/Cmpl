%arg -noOutput


parameters:

	routes  := set( [1,1], [1,2], [1,4] , [2,2], [2,3] ,[2,4] , [3,1] , [3,3] );
	
	plants  := 1(1)3;
	centers := 1(1)4;

	s[plants]  := (5000,6000,2500);
	d[centers] := (6000,4000,2000,1500);

	c[routes] := ( 3, 2, 6, 5, 2, 3, 2, 4 );
	
	
	ts := set( [1,1], [1,3], [2,3], [3,3], [3,2] );
	t2 := set( [3,3], [2,2], [1,1] );
	
	A[ts] := (4, 67, 44, -5, 0);
	

 	echo plants + centers;
	echo  plants * centers;

	echo len(routes); 
	echo len(plants); 
	
	{k in  defset(s[]): echo " k " + k; }
	
	echo " tt " + [1,1]; 
	{ t in  routes: echo " tk " +  t; } 
	
		
	echo "max s " +max(s[plants]);
	
	echo "max c " + max(c[routes]);
	echo max(c);
	
	echo "min c " + min(c[,]);
	echo min(c);
	
	echo count(c[routes]);
	echo count(c[[1,1]]);

	echo max(A[t2]);
	echo min(A[t2]);
	
	echo max(A[ts]);
	echo min(A[ts]);
	
	echo count(A[t2]);
	
	
	s1 := set( "a","b","c","d");
	s2 := set( "a","e","c","f");
	s3 := set( "a","c","b","d");

	{s1=s2: echo "ja"; | default: echo "nein"; }
	{s1=s3: echo "ja"; | default: echo "nein"; }
	{s1==s3: echo "ja"; | default: echo "nein"; }
	{s1==s1: echo "ja"; | default: echo "nein"; }


	s3 := s1 + s2;
	echo s3;
	s4 := s1 * s2;
	echo s4;

	s5 := set{i in 1..10, i mod 2 = 0: i};
	echo s5;
	s6 := set{i in s1, !(i << s2): i};
	echo s6;
	
	routes1  := set( [1,1], [1,2], [4,4] , [2,2] );
	routes2  := set( [1,1],  [1,4] , [1,2] , [2,2], [2,3] ,[2,4] , [3,1] , [3,3] );

	{routes=routes1: echo "ja"; | default: echo "nein"; }
	{routes=routes2: echo "ja"; | default: echo "nein"; }
	{routes==routes2: echo "ja"; | default: echo "nein"; }
	{routes=routes: echo "ja"; | default: echo "nein"; }


	r1:= routes * routes1;
	echo r1;
	
	plants1  := routes *> [*,/];
	centers1 := routes *> [/,*];
	echo plants1;
	echo centers1;
	
	echo routes *> [1,*];
	echo routes *> [1,/];
	a := routes *> [*,/];
	echo a;

	b := routes *> [*1,*];
	echo b;


	u := set( [1,1],[1,2],[2,2],[3,2] );
	echo len(u);
	echo [1,1] << u;
	echo [1,7] << u;

	{ [i,j] in routes: echo " i " + i + " j " + j ;}

	k:=0;
	{ [i,j] in routes: k:=k+1; m[i,j]:=k;} 
	r7:= defset(m[,]);
 	echo r7;

	r8 := defset(c[,]);
	echo r8;
 
 
	
	 
 